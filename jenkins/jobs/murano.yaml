- job:
    name: gate-murano-devstack-dsvm
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=murano,murano-api,murano-engine,tempest
          export PROJECTS="openstack/murano $PROJECTS"
          export PROJECTS="openstack/murano-dashboard $PROJECTS"
          export PROJECTS="openstack/python-muranoclient $PROJECTS"

          function pre_test_hook {
              cd /opt/stack/new/murano/functionaltests
              ./pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              cd /opt/stack/new/murano/functionaltests
              ./post_test_hook.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

# Murano and Congress integration functional tests
- job:
    name: gate-murano-congress-devstack-dsvm
    node: 'devstack-precise || devstack-trusty'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export ENABLED_SERVICES=murano,murano-api,murano-engine,tempest,congress,mistral
          export PROJECTS="openstack/murano $PROJECTS"
          export PROJECTS="openstack/murano-dashboard $PROJECTS"
          export PROJECTS="openstack/python-muranoclient $PROJECTS"
          export PROJECTS="openstack/congress $PROJECTS"
          export PROJECTS="openstack/python-congressclient $PROJECTS"
          export PROJECTS="stackforge/mistral $PROJECTS"
          export PROJECTS="stackforge/python-mistralclient $PROJECTS"

          export DEVSTACK_LOCAL_CONFIG="MURANO_ENABLE_MODEL_POLICY_ENFORCEMENT=True"

          function pre_test_hook {
              cd /opt/stack/new/murano/functionaltests
              ./pre_test_hook_congress.sh
              ./pre_test_hook_mistral.sh
              ./pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              cd /opt/stack/new/murano/functionaltests
              ./post_test_hook.sh congress_mistral
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-muranoclient-dsvm-functional{branch-designator}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_PROJECT_FROM_GIT=python-muranoclient
          export BRANCH_OVERRIDE={branch-override}

          export ENABLED_SERVICES=murano,murano-api,murano-engine,tempest
          export PROJECTS="openstack/murano $PROJECTS"
          export PROJECTS="openstack/murano-dashboard $PROJECTS"
          export PROJECTS="openstack/python-muranoclient $PROJECTS"

          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          function pre_test_hook {{
              # Install Murano devstack modules
              cd /opt/stack/new/murano/functionaltests
              ./pre_test_hook.sh
          }}
          export -f pre_test_hook

          function post_test_hook {{
              # Configure and run functional tests
              /opt/stack/new/python-muranoclient/muranoclient/tests/functional/hooks/post_test_hook.sh
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
